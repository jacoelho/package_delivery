defmodule PackageDelivery.Worker do
  use GenServer

  def start_link(_options) do
    GenServer.start_link(__MODULE__, [:hello], [])
  end

  def handle_message(server, message) do
    GenServer.cast(server, {:handle_message, message})
  end

  ## Server callbacks
  def init(_options) do
    {:ok, []}
  end

  def handle_cast({:handle_message, message}, state) do
    :random.uniform(10000) |> :timer.sleep
    Agent.update(:collector, &(["#{message}"|&1]))
    IO.puts "#{message} process finished\n"
    {:noreply, state}
  end

end

